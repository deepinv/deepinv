[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "deepinv"
authors = [{name="DeepInverse maintainers (see https://github.com/deepinv/deepinv/blob/main/MAINTAINERS.md)"}]
license = {text = "BSD 3-Clause"}
description = "DeepInverse: a PyTorch library for imaging with deep learning"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
]
requires-python = ">=3.10"
version = "0.3.3"
dependencies = [
    "numpy",
    "matplotlib",
    "tqdm",
    "torch>=2.2.0",
    "torchvision",
    "torchmetrics",
    "einops",
    "scipy",
    "requests",
    "h5py",
]

[tool.setuptools]
platforms = ["any"]

[tool.setuptools.packages]
find = { where = ["."] }

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://deepinv.github.io/"
Source = "https://github.com/deepinv/deepinv"
Tracker = "https://github.com/deepinv/deepinv/issues"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "coverage",
]

doc = [
    "sphinx",
    "sphinx_gallery",
    "pydata_sphinx_theme",
    "sphinxemoji",
    "sphinx_copybutton",
    "sphinx_autoapi",
    "sphinx-design",
    "sphinx_sitemap<2.7.0",
    "sphinxcontrib.bibtex"
]

lint = [
    "black",
    "ruff"
]

# optional dependencies for specific denoisers, physics or transforms
denoisers = [
    "bm3d",
    "bm4d<4.2.4",
    "timm",
    "PyWavelets",
    "ptwt",
    "FrEIA",
    "pyiqa",
    "kornia",
    "torchkbnufft",
    "libcpab",
    "sigpy",
    "astra-toolbox>=2.2.0,!=2.3.0; platform_system=='Linux'",
]

# optional dependencies for specific datasets
dataset = [
    "datasets",
    "pandas",
    "pydicom",
    "mat73",
    "natsort",
]

# optional dependencies for training
training = [
    "wandb"
]



#####################################################################
# Pytest configuration and coverage reporting

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "deepinv/tests",
]
markers = [
    "slow",
]

[tool.coverage.run]
branch = true
omit = ['examples/*', 'deepinv/tests']  # define paths to omit

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = ["UP006", "F401", "B905"]

[tool.ruff.lint.per-file-ignores]
# NOTE: Rule F401 is ruff's unused imports rule.
"__init__.py" = ["F401"]
