name: GPU Docs

on:
  schedule:
    - cron: "30 2 */1 * *"
  push:
    branches:
      - main  
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to test"
        required: true
        type: number

concurrency: # Cancel in-progress runs when pushing a new commit on the PR
  group: ${{ github.workflow }}-pr-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  gpu-docs:
    name: Check examples and docs run on GPU
    runs-on: gpu
    env:
      DEEPINV_MOCK_TESTS: "True"
      UV_CACHE_DIR: "/local/jtachell/.cache/uv"
      WORKING_DIR: "/local/jtachell"

    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha
                  || (inputs.pr_number && format('refs/pull/{0}/head', inputs.pr_number))
                  || github.sha }}
                  
      # See https://docs.astral.sh/uv/guides/integration/github
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          version: "0.8.22"
          python-version: "3.11"
          cache-local-path: ${{ env.UV_CACHE_DIR }}

      - name: Set up Python
        run: |
          uv python install
          uv run python --version

      - name: Install the project
        run: uv sync --extra dataset --extra denoisers --extra test --extra training --extra doc

      - name: Check installed packages
        run: |
          uv pip list

      - name: Check import
        run: |
          uv run python -c "import deepinv"

      - name: Sphinx build
        run: |
          uv run python -m sphinx docs/source _build

      - name: Run doctests
        env:
          SPHINX_DOCTEST: "1"
        run: |
          uv run python -m sphinx.cmd.build -M doctest docs/source docs/build -D plot_gallery=0 -v
          
      - name: Upload Documentation Artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: _build/
          
      # Log artifact URL 
      - name: Link to generated docs here
        run: |
          echo "Documentation artifact URL: ${{ steps.upload-artifact.outputs.artifact-url }}"
          
      # Comment results back to PR
      - name: Post result to PR
        if: always() && inputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.inputs.pr_number;
            const result = "${{ job.status }}";
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const artifactUrl = "${{ steps.upload-artifact.outputs.artifact-url }}";
      
            const body = result === "success"
              ? `‚úÖ GPU docs passed
                 üîó [View run details](${runUrl})
                 üì¶ [Download built docs](${artifactUrl})`
              : `‚ùå GPU docs failed\n\nüîó [View run details](${runUrl})`;
      
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body,
            });

